/*
 * Created on Dec 3, 2005
 */
package uk.org.ponder.rsf.flow.errors;

import uk.org.ponder.errorutil.TargettedMessage;
import uk.org.ponder.util.Logger;
import uk.org.ponder.util.UniversalRuntimeException;

/** A simple, serializable implementation of the ActionErrorStrategy interface.
 * Any of the fields that are non-null will be matched against the information
 * incoming to the interface.
 * @author Antranig Basman (antranig@caret.cam.ac.uk)
 *
 */

public class StaticActionErrorStrategy implements ActionErrorStrategy {
  /** The return code (if a String value was received) from the Action invocation */
  public String returncode;
  /** The exception class to be matched against any exception which has been generated
   *  by the action invocation.
   */
  public Class exceptionclass;
  /** The current flow state in which the error is received **/
  public String flowstate;
  /** The current view ID for which the error occurred **/
  public String viewID;

  /** <code>true</code> if any exception encountered should be propagated
   * (as a URE). The default, <code>false</code> if exceptions are to be
   * converted into general TargettedMessages.
   */
  public boolean propagateexception;
  /** The target for any TargettedMessage generated by this handler */
  public String messagetarget;
  /** The key for any TargettedMessage generated by this handler */
  public String messagekey;
  /** The new action result value to be used by request handling to compute
   * the next view.
   */ 
  public Object newreturncode;

  public Object handleError(String returncode, Exception exception,
      String flowstate, String viewID, TargettedMessage message) {
    if ((this.returncode == null || this.returncode.equals(returncode))
        && (this.exceptionclass == null || exceptionclass.isInstance(exception))
        && (this.flowstate == null || this.flowstate.equals(flowstate))
        && (this.viewID == null || this.viewID.equals(viewID))) {
      if (messagekey != null) {
        message.updateMessageCode(messagekey);
        if (messagetarget != null) {
          message.targetid = messagetarget;
        }
        if (exception != null) {
          if (propagateexception) {
            throw UniversalRuntimeException.accumulate(exception);
          }
          else {
            Logger.log.warn("Error invoking action", exception);
          }
        }
      }
      return newreturncode == null? returncode : newreturncode;
    }
    return null;
  }

}
