<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN"
  "http://www.springframework.org/dtd/spring-beans.dtd">
<!-- This file is RSF-static configuration - common and invariant to 
  all applications using RSF -->
<beans>
  <bean id="reflectivecache" class="uk.org.ponder.reflect.JDKReflectiveCache">
  </bean>

  <bean id="saxalizerMappingContext"
    class="uk.org.ponder.saxalizer.SAXalizerMappingContext">
    <property name="reflectiveCache">
      <ref bean="reflectivecache" />
    </property>
  </bean>

  <bean id="streamResolver"
    class="uk.org.ponder.springutil.SpringStreamResolver">
  </bean>

  <bean id="entityResolverStash"
    class="uk.org.ponder.saxalizer.EntityResolverStash">
    <property name="streamResolver">
      <ref bean="streamResolver" />
    </property>
    <property name="entityResolvers">
      <list>
        <bean class="uk.org.ponder.saxalizer.LocalEntityResolver">
          <property name="ID">
            <value>-//SPRING//DTD WEBFLOW//EN</value>
          </property>
          <property name="path">
            <value>classpath:/dtd/spring-webflow.dtd</value>
          </property>
        </bean>
      </list>
    </property>
  </bean>

  <bean id="mappablexmlprovider"
    class="uk.org.ponder.saxalizer.SAXalXMLProvider">
    <constructor-arg>
      <ref bean="saxalizerMappingContext" />
    </constructor-arg>
    <property name="entityResolverStash">
      <ref bean="entityResolverStash" />
    </property>
  </bean>

  <bean id="rsfmappingloader"
    class="uk.org.ponder.rsf.mappings.RSFMappingLoader">
    <property name="viewParamsLeafParser">
      <ref bean="viewParamsLeafParser" />
    </property>
  </bean>

  <bean id="mappingloadmanager"
    class="uk.org.ponder.springutil.SpringXMLMappingLoader"
    init-method="init">
    <property name="SAXalizerMappingContext">
      <ref bean="saxalizerMappingContext"></ref>
    </property>
    <property name="mappableXMLProvider">
      <ref bean="mappablexmlprovider"></ref>
    </property>
  </bean>

  <bean id="xmlprovider" factory-bean="mappingloadmanager"
    factory-method="getXMLProvider">
  </bean>

  <bean id="mappingContext" factory-bean="mappingloadmanager"
    factory-method="getSAXalizerMappingContext"></bean>

  <bean id="DARApplier" class="uk.org.ponder.mapping.DARApplier">
    <property name="SAXalXMLProvider">
      <ref local="mappablexmlprovider" />
    </property>
    <property name="reflectiveCache">
      <ref bean="reflectivecache" />
    </property>
  </bean>

  <bean id="deepbeancloner" class="uk.org.ponder.reflect.DeepBeanCloner">
    <property name="mappingContext">
      <ref bean="mappingContext" />
    </property>
    <property name="reflectiveCache">
      <ref bean="reflectivecache" />
    </property>
  </bean>

  <bean id="fieldGetter" class="uk.org.ponder.beanutil.BeanFieldResolver">
    <property name="mappingContext">
      <ref bean="mappingContext"/>
    </property>
  </bean>

  <bean id="fossilizedconverter"
    class="uk.org.ponder.rsf.request.FossilizedConverter">
    <property name="SAXalXMLProvider">
      <ref bean="mappablexmlprovider" />
    </property>
  </bean>

  <bean id="messageRenderer"
    class="uk.org.ponder.rsf.renderer.MessageRenderer">
    <property name="messageLocator">
      <ref bean="messagelocator" />
    </property>
  </bean>

  <bean id="bindingfixer"
    class="uk.org.ponder.rsf.componentprocessor.BindingFixer">
    <property name="fossilizedConverter">
      <ref bean="fossilizedconverter" />
    </property>
  </bean>

  <bean id="messagefixer"
    class="uk.org.ponder.rsf.componentprocessor.MessageFixer">
    <property name="messageLocator">
      <ref bean="messagelocator" />
    </property>
  </bean>

  <bean id="baseurlprovider"></bean>

  <bean id="rsacresourcelocator"
    class="uk.org.ponder.rsac.servlet.ServletRSACResourceLocator">
  </bean>

  <bean id="rsacbeanlocatorfactory"
    class="uk.org.ponder.rsac.RSACBeanLocatorFactory">
    <property name="RSACResourceLocator">
      <ref local="rsacresourcelocator" />
    </property>
  </bean>

  <bean id="rsacBeanLocator" factory-bean="rsacbeanlocatorfactory"
    factory-method="getRSACBeanLocator">
    <property name="reflectiveCache">
      <ref bean="reflectivecache" />
    </property>
    <property name="mappingContext">
      <ref bean="saxalizerMappingContext" />
    </property>
  </bean>

  <bean id="rendersystemstatic"
    class="uk.org.ponder.rsf.renderer.html.BasicHTMLRenderSystemStatic">
  </bean>

  <bean id="idgenerator" class="uk.org.ponder.hashutil.EighteenIDGenerator" />

  <bean id="templateexpander"
    class="uk.org.ponder.rsf.expander.TemplateExpander">
    <property name="DARApplier">
      <ref bean="DARApplier" />
    </property>
    <property name="deepBeanCloner">
      <ref bean="deepbeancloner" />
    </property>
    <property name="RSACBeanLocator">
      <ref bean="rsacBeanLocator" />
    </property>
  </bean>

  <bean id="viewresolver" class="uk.org.ponder.rsf.view.ConcreteViewResolver">
    <property name="views">
      <ref bean="staticviews" />
    </property>
    <property name="viewResolvers">
      <list>
        <ref bean="xmlviewresolver" />
      </list>
    </property>
  </bean>

  <bean id="viewParamsLeafParser"
    class="uk.org.ponder.rsf.viewstate.ViewParamsLeafParser">
    <property name="beanModelAlterer">
      <ref bean="DARApplier" />
    </property>
    <property name="viewParametersParser">
      <ref bean="viewParametersParser" />
    </property>
  </bean>

  <!-- The default ActionResultInterpreter which directs to the same view-->
  <bean id="nullActionResultInterpreter"
    class="uk.org.ponder.rsf.flow.NullActionResultInterpreter">
  </bean>
  <!-- FlowLiteARI expects return codes from a FlowActionProxyBean of type
    ViewState -->
  <bean id="flowLiteARI" class="uk.org.ponder.rsf.flow.lite.FlowLiteARI"></bean>

  <bean id="flowOnlyPreservingBeans"
    class="uk.org.ponder.springutil.StringListFactory">
    <property name="strings">
      <value>flowLite-flowIDHolder</value>
    </property>
  </bean>

  <bean id="listenerConnector" class="uk.org.ponder.iocevent.BeetleConnector"/>

</beans>