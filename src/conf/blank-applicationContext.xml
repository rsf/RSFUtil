<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" 
	"http://www.springframework.org/dtd/spring-beans.dtd">
<!-- The purpose of this file is to provide an "default" completion of
  the application scope portion of 
  RSF's Spring API, so that the project will validate self-consistently in,
  for example, Spring IDE.  Dependencies resolved here are ones that clients
  might well want to (and in many cases must) override, as opposed to more 
  core dependencies in the main RSF configuration file rsf-config.xml. -->
<beans>
  <bean id="messageSource"
    class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
    <property name="basename">
      <value>WEB-INF/messages/messages</value>
    </property>
    <property name="cacheSeconds">
      <value>10</value>
    </property>
  </bean>

  <bean id="messageLocator"
    class="uk.org.ponder.springutil.SpringMessageLocator">
    <property name="messageSource">
      <ref local="messageSource" />
    </property>
  </bean>

  <bean id="viewParametersParser"
    class="uk.org.ponder.rsf.viewstate.BasicViewParametersParser"
    init-method="init">
    <property name="beanModelAlterer" ref="DARApplier" />
    <property name="reflectiveCache" ref="reflectiveCache" />
  </bean>

  <bean id="siteMapDef" class="uk.org.ponder.rsf.viewstate.XMLSiteMapLoader"
    parent="XMLFactoryBean" abstract="true">
    <property name="location">
      <value>/WEB-INF/sitemap.xml</value>
    </property>
    <property name="viewParametersReceiver" ref="viewParametersParser" />
  </bean>

  <bean id="JSFNavigationMap" parent="XMLFactoryBean" lazy-init="true">
    <!-- 
      <property name="location" value="/WEB-INF/navigation-map.xml"/>
    -->
    <property name="objectType"
      value="uk.org.ponder.rsf.flow.jsfnav.NavigationMap" />
  </bean>

  <bean id="viewParamsExemplar"
    class="uk.org.ponder.rsf.viewstate.SimpleViewParameters">
  </bean>

  <bean id="autoComponentProducerManager"
    class="uk.org.ponder.rsf.view.AutoComponentProducerManager"
    init-method="init">
    <property name="reflectiveCache" ref="reflectiveCache" />
    <property name="RSACBeanLocator" ref="rsacBeanLocator" />

  </bean>

  <bean id="viewResolver" class="uk.org.ponder.rsf.view.ConcreteViewResolver"
    init-method="init">
    <property name="views">
      <ref bean="staticviews" />
    </property>
    <property name="autoComponentProducerManager"
      ref="autoComponentProducerManager" />
    <property name="viewResolvers">
      <list>
        <ref bean="XMLViewResolver" />
      </list>
    </property>
    <property name="viewParametersReceiver" ref="viewParametersParser" />
    <property name="navigationCaseReceiver" ref="navigationCasePooler" />
  </bean>

  <!--  override this bean with a concrete bean derived from XmlViewResolverDef -->
  <bean id="XMLViewResolver" class="uk.org.ponder.rsf.view.NullViewResolver" />

  <bean id="XMLViewResolverDef" class="uk.org.ponder.rsf.view.XMLViewResolver"
    abstract="true">
    <property name="XMLProvider" ref="XMLProvider" />
    <property name="templateExpander" ref="templateExpander" />
    <property name="viewParamsReceiver" ref="viewParametersParser" />
  </bean>

  <bean id="XMLActionErrorStrategyDef" parent="XMLFactoryBean"
    abstract="true">
    <property name="objectType">
      <value>uk.org.ponder.rsf.flow.ActionErrorStrategyManager</value>
    </property>
  </bean>

  <bean id="XMLActionErrorStrategies" parent="XMLActionErrorStrategyDef" />

  <bean name="requestAddressibleBeans"
    class="uk.org.ponder.stringutil.StringList">
    <constructor-arg>
      <list>
        <value>flowLite-flowIDHolder</value>
      </list>
    </constructor-arg>
  </bean>

  <bean id="staticviews" class="java.util.ArrayList">
    <constructor-arg>
      <list></list>
    </constructor-arg>
  </bean>

  <!-- The two properties of sbup
    are only relevant to users of the direct UI, where the URL that it appears
    at is somehow "unexpected". In order to use these values, it is necessary
    to copy these two definitions into the application's application context
    file, together with definitions for the referenced URLs. Given these URLs
    will generally represent configuration relevant to the end user, these should
    be placed in yet a 3rd application context file, suggestion: a file called
    userConfig.xml which breaks out all such configurable dependencies.
    These will be overridden for consumers of the remote web service.  -->
  <bean id="directuibaseurl" class="java.lang.String">
    <constructor-arg>
      <value>
        http://www.unexpected.hosting.environment/servletcontext/faces/
      </value>
    </constructor-arg>
  </bean>
  <bean id="directuiresourcebaseurl" class="java.lang.String">
    <constructor-arg>
      <value>http://www.unexpected.hosting.environment/servletcontext/</value>
    </constructor-arg>
  </bean>


  <!-- This is now a request-scope bean defined in core RSF to use the auto-provider.
    Override it with the following definition in your own requestScopeConfig and define
    the two URL values above in order to use static URL determination -->
  <bean id="staticBaseURLProvider" abstract="true">
    <!-- CONFIG The URL under which RSF-rendered pages served directly 
      will be made visible -->
    <property name="baseURL">
      <ref bean="directuibaseurl" />
    </property>
    <!-- CONFIG The URL under which static resources will be made visible -->
    <property name="resourceBaseURL">
      <ref bean="directuiresourcebaseurl" />
    </property>
  </bean>

  <!-- This bean may be overriden with your default view, in reduced form
    beginning with /  , otherwise it will be inferred from a view which reports
    itself as a default. Do not try to get the value of this bean as an
    application-scope dependency -->
  <bean id="defaultView" factory-bean="viewParametersParser"
    factory-method="getDefaultView" lazy-init="true" />

  <bean id="URLPreservingBeanSpecs"
    class="uk.org.ponder.springutil.StringListFactory">
    <property name="strings">
      <value>flowstateid|flowLite-flowIDHolder.requestFlowStateID</value>
    </property>
  </bean>

  <bean id="copyPreservingBeans"
    class="uk.org.ponder.springutil.StringListFactory">
    <property name="strings">
      <value>flowLite-flowIDHolder</value>
    </property>
  </bean>

  <bean id="inMemoryFlowLockGetter"
    class="uk.org.ponder.rsf.flow.InMemoryFlowLockGetter">
    <property name="listenerTargetKey">
      <ref bean="flowTokenStateHolder" />
    </property>
    <property name="listenerReporter">
      <ref bean="listenerConnector" />
    </property>
  </bean>

  <!--  Should probably replace both of these StateHolders with InSessionTSH:-->
  
  <!-- 
  <bean id="flowTokenStateHolder" class="uk.org.ponder.rsf.servlet.InSessionTSH">
    <property name="session" ref="httpSession"/>
  </bean> -->
  
  <bean id="flowTokenStateHolder" class="uk.org.ponder.rsf.state.InMemoryTSH"
    init-method="init">
    <property name="expirySeconds">
      <!-- deliberately short time for testing - all flows will expire after 
        30 seconds of disuse -->
      <value>30</value>
    </property>
    <property name="listenerGetter">
      <ref bean="listenerConnector" />
    </property>
  </bean>

  <!-- The state holder used for "ephemeral" state designed to only persist
    through about 1 client request - error messages, end flow messages,
    data in transit to client storage -->
  <bean id="bandgapStateHolder" class="uk.org.ponder.rsf.state.InMemoryTSH">
    <property name="expirySeconds">
      <!-- deliberately short time for testing - all errors will expire after 
        10 seconds of disuse -->
      <value>10</value>
    </property>
  </bean>

</beans>